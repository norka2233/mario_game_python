import os.pathimport pygameWIN_WIDTH = 800WIN_HEIGHT = 640DISPLAY = (WIN_WIDTH, WIN_HEIGHT)BACKGROUND_COLOR = '#000000'FPS = 60FILE_DIR = os.path.dirname(__file__)SCREEN_START = (0, 0)class Camera:    def __init__(self):        pass    def apply(self):        pass    def update(self):        passdef camera_config(camera, target_rectangle):    passdef load_level():    passdef main():    load_level()    pygame.init()    screen = pygame.display.set_mode(DISPLAY)    pygame.display.set_caption("Super Mario")    background = Surface(DISPLAY)    background.fill(Color(BACKGROUND_COLOR))    left = right = up = run = False    hero = Player(player_x, player_y)    timer = pygame.time.Clock()    x = y = 0    while not hero.winner:        for event in pygame.event.get():            if event.type == QUIT:                raise SystemExit('QUIT')            """if event.type == KEYDOWN and event.key == pygame.K_UP:                up = True            if event.type == KEYDOWN and event.key == pygame.K_LEFT:                left = True            if event.type == KEYDOWN and event.key == pygame.K_RIGHT:                right = True            if event.type == KEYDOWN and event.key == pygame.K_LSHIFT:                run = True                """            if event.type == KEYDOWN:                if event.key == pygame.K_UP:                    up = True                if event.key == pygame.K_LEFT:                    left = True                if event.key == pygame.K_RIGHT:                    right = True                if event.key == pygame.K_LSHIFT:                    run = True            if event.type == KEYUP:                if event.key == pygame.K_UP:                    up = False                if event.key == pygame.K_LEFT:                    left = False                if event.key == pygame.K_RIGHT:                    right = False                if event.key == pygame.K_LSHIFT:                    run = False        screen.blit(background, SCREEN_START)        monster.update(platform)        Camera.update()        hero.update(left, right, up, run, platform)        for event in entities:            screen. blit(event.image, Camera.apply)    timer.tick(FPS)    pygame.display.update()level = []platform = []entities = pygame.sprite.Group()animatedEntities = pygame.sprite.Group()monster = pygame.sprite.Group()if __name__ == '__main__':    main()