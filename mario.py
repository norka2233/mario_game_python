import os.pathimport pygamefrom settings import WIN_WIDTH, WIN_HEIGHT, DISPLAY, BACKGROUND_COLOR, FPS, FILE_DIR, SCREEN_STARTclass Camera:    def __init__(self, camera_fn, width, height):        self.camer_fn = camera_fn        self.state = Rect(0, 0 , width, height)    def apply(self, target):        return target.rect.move(self.state.topleft)    def update(self, target):        self.state = self.camer_fn(self.state, target.rect)def camera_config(camera, target_rectangle):    l, t _, _ = target_rectangle    _, _, w, h = camera    l, t = - l + WIN_WIDTH / 2, - t + WIN_HEIGHT / 2    l = min(0, l)    l = max(-(camera.width - WIN_WIDTH), l)    t = min(0, t)    t = max(-(camera.width - WIN_HEIGHT), t)    return Rect(l, t, w, h)def load_level():    global platform_x, platform_y    level_file = open('%s/level/1.txt', FILE_DIR)    line = " "    command = []    while line[0] != '/':        line = level_file.readlines()        if line[0] == '[':            while line[0] != ']':                line = level_file.readlines()                if line[0] != ']':                    end_line = line.find('|')                    level.append(line[0: end_line])        if line[0] != '':            command = line.split()        if len(command) > 1:            if command == 'player':                player_x = int(command[1])                player_y = int(command[2])            if command[0] == 'portal':                tp = Blockdef main():    load_level()    pygame.init()    screen = pygame.display.set_mode(DISPLAY)    pygame.display.set_caption("Super Mario")    background = Surface(DISPLAY)    background.fill(Color(BACKGROUND_COLOR))    left = right = up = run = False    hero = Player(player_x, player_y)    timer = pygame.time.Clock()    x = y = 0    while not hero.winner:        for event in pygame.event.get():            if event.type == QUIT:                raise SystemExit('QUIT')            """if event.type == KEYDOWN and event.key == pygame.K_UP:                up = True            if event.type == KEYDOWN and event.key == pygame.K_LEFT:                left = True            if event.type == KEYDOWN and event.key == pygame.K_RIGHT:                right = True            if event.type == KEYDOWN and event.key == pygame.K_LSHIFT:                run = True                """            if event.type == KEYDOWN:                if event.key == pygame.K_UP:                    up = True                if event.key == pygame.K_LEFT:                    left = True                if event.key == pygame.K_RIGHT:                    right = True                if event.key == pygame.K_LSHIFT:                    run = True            if event.type == KEYUP:                if event.key == pygame.K_UP:                    up = False                if event.key == pygame.K_LEFT:                    left = False                if event.key == pygame.K_RIGHT:                    right = False                if event.key == pygame.K_LSHIFT:                    run = False        screen.blit(background, SCREEN_START)        monster.update(platform)        Camera.update()        hero.update(left, right, up, run, platform)        for event in entities:            screen. blit(event.image, Camera.apply)    timer.tick(FPS)    pygame.display.update()level = []platform = []entities = pygame.sprite.Group()animatedEntities = pygame.sprite.Group()monster = pygame.sprite.Group()if __name__ == '__main__':    main()